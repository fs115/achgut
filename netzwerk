# Edgelist laden

# Funktion read.csv

ag <- read.csv("ag.csv", header=TRUE) # liest die Datei ein
is.data.frame(ag) # prüft, ob ein is.data.frame vorliegt
ag # zeigt den Datenframe an

# Funktion graph.data.frame

agi <- graph.data.frame(ag, directed = TRUE) # liest den Datenframe, braucht andere Bezeichnung als ag
class(agi) #prüft, welches Format agi hat
agi # zeigt igraph-Objekt an
plot (agi)

####################

# Nodelist laden

library(igraph)

getwd()
# liest die Dateien direkt aus dem github-Verzeichnis ein
ag <- read.csv("ag.csv", header=T, as.is=T, sep = ",")
nodes <- read.csv("nl.csv", header=T, as.is=T, sep = ",")
# prüft, ob alle Variablen eingelesen wurden
head(ag)
head(nodes)
# wandelt die edgelist in eine Matrix um und baut das igraph-Objekt
hties <-as.matrix(ag)
ag <- graph_from_data_frame(d=ag, vertices=nodes, directed=T)
ag

# einfache Visualisierung
plot(ag)

## Grundsätzliche Darstellung für alle:

E(ag)$curved=.2 

# Verschiedene Darstellung von Webseite und Autor, bi-partite

V(ag)[V(ag)$type == 1]$shape <- "square"
V(ag)[V(ag)$type == 0]$shape <- "circle"
V(ag)[V(ag)$type == 0]$color <- "cornflowerblue"
V(ag)[V(ag)$type == 1]$color <- "aquamarine2"
outd <- degree(ag, mode="out")
outd
E(ag)$width <- outd*0.2
plot(ag)

# Fake und Qualität Ego-Netzwerke
E(ag)[relation == 3]$color <- "red"
E(ag)[relation == 2]$color <- "orange"
E(ag)[relation == 1]$color <- "yellow"
V(ag)[qualitaetsmedium == 3]$color = "red"
V(ag)[qualitaetsmedium == 1]$color = "green"

############################### BIS HIER IMMER LADEN ###################

####################### HIER BEGINNEN DIE VERSCHIEDENEN NETZWERKE ###########################

## Ego-Netzwerke der wichtigsten Webseiten, bemessen am jeweiligen Indegree-Wert:

## degree-Berechnung

# indegree, aufsteigend sortiert

c <- degree(ag, mode = "in")
sort(c)

#Ergebnis:
# achgut (127), faktum_magazin (48), politikxx (34), leserbriefe (23), bazonline (24), veralengsfeld (21)
# Ohne News-Sammel-Seiten:
# achgut (127), faktum_magazin (48), politikxx (34), bazonline (24), veralengsfeld (21), publicomag (19)

## Darstellung der Ego-Netzwerke der Webseiten mit Lieblings-Effekt

# Ego-Netzwerk achgut
vachgut <- subgraph <- make_ego_graph(ag, order=1, c("achgut"))
outd <- degree(ag, mode="out")
outd
vachgut
plot(vachgut[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'achgut.com'")

# Ego-Netzwerk faktum_magazin (viele Teaser, Lieblinge)

vfaktum_magazin <- subgraph <- make_ego_graph(ag, order=1, c("faktum_magazin"))
outd <- degree (ag, mode="out")
plot(vfaktum_magazin[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'faktum-magazin.de'")

# Ego-Netzwerk politikxx (viele Teaser und Links, Lieblinge)

vpolitikxx <- subgraph <- make_ego_graph(ag, order=1, c("politikxx"))
ind <- degree (ag, mode="in")
plot(vpolitikxx[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'politik24.de'")

# Ego-Netzwerk leserbriefe

vleserbriefe <- subgraph <- make_ego_graph(ag, order=1, c("leserbriefe"))
plot(vleserbriefe[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'leserbriefe.info'")

# Ego-Netzwerk bazonline

vbazonline <- subgraph <- make_ego_graph(ag, order=1, c("bazonline"))
plot(vbazonline[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'bazonline.ch'")

# Ego-Netzwerk veralengsfeld (nur auf eigene Seite, Volltexte)

vveralengsfeld <- subgraph <- make_ego_graph(ag, order=1, c("veralengsfeld"))
plot(vveralengsfeld[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'vera-lengsfeld.de'")

# Ego-Netzwerk publicomag (nur Volltexte und Liebling)

vpublicomag <- subgraph <- make_ego_graph(ag, order=1, c("publicomag"))
plot(vpublicomag[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'publicomag.com'")

# Ego-Netzwerk newstral (nur Links, News-Sammel-Seite)

vnewstral <- subgraph <- make_ego_graph(ag, order=1, c("newstral"))
plot(vnewstral[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'newstral'")

# Ego-Netzwerk welt (nur Volltexte)

vwelt <- subgraph <- make_ego_graph(ag, order=1, c("welt"))
plot(vwelt[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'welt.de'")

# Ego-Netzwerk the european (nur Volltexte)

vtheeuropean <- subgraph <- make_ego_graph(ag, order=1, c("theeuropean"))
plot(vtheeuropean[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'theeuropean'")

## Darstellung der 5 wichtigsten Ego-Netzwerke der Autoren (gemessen am Outdegree-Wert)

## Outdegree-Berechnung

# Outdegree, aufsteigend sortiert

c <- degree(ag, mode = "out")
sort(c)

# Ergebnis:
# peter grimm (129), henryk_m_broder (75), vera_lengsfeld (63), christian_ortner (50), dirk_maxeiner (34)

# Ego-Netzwerk Peter Grimm (sehr aktiv, viele Seiten, einige stechen hervor)
vpeter_grimm <- subgraph <- make_ego_graph(ag, order=1, c("peter_grimm"))
plot(vpeter_grimm[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.7, layout = layout_with_kk, main="Ego-Netzwerk Peter Grimm")

# Ego-Netzwerk Henryk M. Broder (wie oben, noch deutlicher)
vhenryk_m_broder <- subgraph <- make_ego_graph(ag, order=1, c("henryk_m_broder"))
plot(vhenryk_m_broder[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.8, layout = layout_with_kk, main="Ego-Netzwerk Henryk M. Broder")

# Ego-Netzwerk Vera Lengsfeld (SPANNEND, Fake-News-Cluster)
vvera_lengsfeld <- subgraph <- make_ego_graph(ag, order=1, c("vera_lengsfeld"))
plot(vvera_lengsfeld[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.8, layout = layout_with_kk, main="Ego-Netzwerk Vera Lengsfeld")

# Ego-Netzwerk Dirk Maxeiner (nicht so spannend)
vdirk_maxeiner <- subgraph <- make_ego_graph(ag, order=1, c("dirk_maxeiner"))
plot(vdirk_maxeiner[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.8, layout = layout_with_kk, main="Ego-Netzwerk Dirk Maxeiner")

## Fake und Qualität Ego-Netzwerke

# Ego-Netzwerk Christian Ortner (hat Fake und Qualität!!)
vchristian_ortner <- subgraph <- make_ego_graph(ag, order=1, c("christian_ortner"))
plot(vchristian_ortner[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.8, layout = layout_with_kk, main="Ego-Netzwerk Christian Ortner")

# Ego-Netzwerk Alexander Wendt (hat Fake und Qualität!!)
valexander_wendt <- subgraph <- make_ego_graph(ag, order=1, c("alexander_wendt"))
plot(valexander_wendt[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.8, layout = layout_with_kk, main="Ego-Netzwerk Alexander Wendt")


## Netzwerke mit Qualitätsmedien

vertex_attr(ag)
# Teilnetzwerk nur mit Autoren, die bei Qualitätsmedien publizierten (qualitätsmedium = 1)

qualitaet_mit_fake <- delete_vertices(ag, V(ag)[qualitaetsmedium=="2"])
qualitaet_mit_fake
plot(qualitaet_mit_fake)
qualitaet_ohne_fake <- delete_vertices(qualitaet_mit_fake, V(qualitaet_mit_fake)[qualitaetsmedium=="3"])
qualitaet_ohne_fake
plot(qualitaet_ohne_fake)
vertex_attr(qualitaet_ohne_fake)
degree(qualitaet_ohne_fake)
V(qualitaet_ohne_fake)$degreequalitaet = degree(qualitaet_ohne_fake) 
qualitaet2 <- delete_vertices(qualitaet_ohne_fake, V(qualitaet_ohne_fake)[degreequalitaet=="0"])
vertex_attr(qualitaet2)
ind <- degree(qualitaet2, mode="in")
plot(qualitaet2, edge.arrow.size=.01, vertex.frame.color="white", vertex.label.dist=1, vertex.label.cex=.7, vertex.label.family="Arial", layout = layout_with_fr, main="Qualitätsmedien")
qualitaet <- V(qualitaet2)[V(qualitaet2)$qualitaetsmedium == "1"]
V(qualitaet2)[qualitaet]$color = "green"
plot(qualitaet2, edge.arrow.size=.01, vertex.frame.color="white", vertex.label.dist=1, vertex.label.size=10, vertex.label.cex=.7, vertex.label.family="Arial", layout = layout_with_fr, main="Qualitätsmedien")

# Teilnetzwerk nur mit Autoren, die auf Fake-News-Seiten auftauchen

qualitaet_mit_fake <- delete_vertices(ag, V(ag)[qualitaetsmedium=="2"])
qualitaet_mit_fake
plot(qualitaet_mit_fake)
nur_fake <- delete_vertices(qualitaet_mit_fake, V(qualitaet_mit_fake)[qualitaetsmedium=="1"])
nur_fake
plot(nur_fake)
vertex_attr(nur_fake)
degree(nur_fake)
V(nur_fake)$degreequalitaet = degree(nur_fake) 
fakenews <- delete_vertices(nur_fake, V(nur_fake)[degreequalitaet=="0"])
vertex_attr(fakenews)
ind <- degree(fakenews, mode="in")
plot(fakenews, edge.arrow.size=.01, vertex.frame.color="white", vertex.label.dist=1, vertex.label.size=10, vertex.label.cex=.7, vertex.label.family="Arial", layout = layout_with_fr, main="Fake-News-Seiten")
fake <- V(fakenews)[V(fakenews)$qualitaetsmedium == "3"]
V(fakenews)[fake]$color = "red"
plot(fakenews, edge.arrow.size=.01, vertex.frame.color="white", vertex.label.dist=1, vertex.label.size=10, vertex.label.cex=.7, vertex.label.family="Arial", layout = layout_with_fr, main="Fake-News-Seiten")

# gleichzeitige Darstellung von Qualität und Fake News nebeneinander

plot(fakenews, edge.arrow.size=.01, vertex.frame.color="white", vertex.label.dist=1, vertex.label.size=10, vertex.label.cex=.7, vertex.label.family="Arial", layout = layout_with_fr, main="Fake-News-Seiten")
plot(qualitaet2, edge.arrow.size=.01, vertex.frame.color="white", vertex.label.dist=1, vertex.label.cex=.7, vertex.label.family="Arial", layout = layout_with_fr, main="Qualitätsmedien")

# Darstellung beider Netzwerke gemeinsam mit Verbindungen und verschiedenen Farben

qualitaet_und_fake <- delete_vertices(ag, V(ag)[qualitaetsmedium=="2"])
qualitaet_und_fake
plot(qualitaet_und_fake)
degree(qualitaet_und_fake)
V(qualitaet_und_fake)$degreequalitaet = degree(qualitaet_und_fake) 
qualitaet_und_fake2 <- delete_vertices(qualitaet_und_fake, V(qualitaet_und_fake)[degreequalitaet=="0"])
vertex_attr(qualitaet_und_fake2)
ind <- degree(qualitaet_und_fake2, mode="in")
plot(qualitaet_und_fake2, edge.arrow.size=.01, vertex.frame.color="white", vertex.label.dist=1, vertex.label.size=10, vertex.label.cex=.7, vertex.label.family="Arial", layout = layout_with_fr, main="Qualität und Fake")
fake <- V(qualitaet_und_fake2)[V(qualitaet_und_fake2)$qualitaetsmedium == "3"]
V(qualitaet_und_fake2)[fake]$color = "red"
qualitaet <- V(qualitaet_und_fake2)[V(qualitaet_und_fake2)$qualitaetsmedium == "1"]
V(qualitaet_und_fake2)[qualitaet]$color = "green"
plot(qualitaet_und_fake2, rescale=TRUE, edge.arrow.size=.01, vertex.frame.color="white", vertex.label.dist=1, vertex.label.size=10, vertex.label.cex=.7, vertex.label.family="Arial", layout = layout_with_kk, main="Qualität und Fake")


# Zahlenmäßige Verteilung Links, Teaser und Volltext:

E(ag)[relation == 3] # Selektion des Attributs, nicht ausfuehren

# Teilnetzwerk nur mit Links

ag_links <- subgraph.edges(ag, E(ag)[relation == 1])
ag_links # 77 Knoten, 122 Kanten
plot (ag_links)
clinks <- degree(ag_links, mode = "in")
sort(clinks)
# meiste Verlinkungen: newstral (19), kopp_report(10), freepress_media(8)

# Teilnetzwerk nur mit Volltexten

ag_volltext <- subgraph.edges(ag, E(ag)[relation == 3]) 
ag_volltext # 92 Knoten, 341 Kanten
plot (ag_volltext)
cvoll <- degree(ag_volltext, mode = "in")
sort(cvoll)
# meiste Volltexte: achgut (126), veralengsfeld (21), publicomag (19), welt (17)

# Teilnetzwerk nur mit Teasern

ag_teaser <- subgraph.edges(ag, E(ag)[relation == 2]) 
ag_teaser # 77 Knotwn, 234 Kanten
plot (ag_teaser)
cteaser <- degree(ag_teaser, mode="in")
sort(cteaser)
# meiste Verlinkungen: faktum_magazin (44), politikxx (31), leserbriefe (22), news_feed_reader (20), haolam_info (14)

### Netzwerk- und Akteursmaße

# Betweenness-Netzwerke

edge_betweenness(ag)
betweeness1 <- edge_betweenness(ag)
betweeness1
sort(betweeness1)
plot(betweeness1)

#Zentralisierter Degree-Wert (Verteilung aller Degrees im Netzwerk in Prozent, 35 Prozent realisiert)
centr_degree(ag)$centralization
# ist 0.3460582

#Zentralisierter Closeness-Wert (wie dicht die Knoten zusammenstehen)
centr_clo(ag, mode = "all")$centralization
# ist 0.05483674

#Zentralisierter Betweenness-Wert
centr_betw(ag, directed = FALSE)$centralization

# Dichte
edge_density(ag)
# ist 0,02237417

# Durchmesser
diameter(ag)
# ist 1

# groesste Cliquen
largest.cliques(ag, 5)
maximal.cliques.count(ag)

# Cluster im Netzwerk

gc <- cluster_walktrap(ag)
modularity(gc)
membership(gc)
plot(gc, ag, edge.arrow.size=0.1)
