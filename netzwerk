# Edgelist laden

# Funktion read.csv

ag <- read.csv("ag.csv", header=TRUE) # liest die Datei ein
is.data.frame(ag) # prüft, ob ein is.data.frame vorliegt
ag # zeigt den Datenframe an

# Funktion graph.data.frame

agi <- graph.data.frame(ag, directed = TRUE) # liest den Datenframe, braucht andere Bezeichnung als ag
class(agi) #prüft, welches Format agi hat
agi # zeigt igraph-Objekt an
plot (agi)

####################

# Nodelist laden

library(igraph)

getwd()
# liest die Dateien direkt aus dem github-Verzeichnis ein
ag <- read.csv("ag.csv", header=T, as.is=T, sep = ",")
nodes <- read.csv("nl.csv", header=T, as.is=T, sep = ",")
# prüft, ob alle Variablen eingelesen wurden
head(ag)
head(nodes)
# wandelt die edgelist in eine Matrix um und baut das igraph-Objekt
hties <-as.matrix(ag)
ag <- graph_from_data_frame(d=ag, vertices=nodes, directed=T)
ag

# einfache Visualisierung
plot(ag)

## Grundsätzliche Darstellung für alle:

E(ag)$curved=.2 

# Verschiedene Darstellung von Webseite und Autor, bi-partite

V(ag)[V(ag)$type == 1]$shape <- "square"
V(ag)[V(ag)$type == 0]$shape <- "circle"
V(ag)[V(ag)$type == 0]$color <- "cornflowerblue"
V(ag)[V(ag)$type == 1]$color <- "aquamarine2"
outd <- degree(ag, mode="out")
outd
E(ag)$width <- outd*0.2
plot(ag)

############################### BIS HIER IMMER LADEN ###################

####################### HIER BEGINNEN DIE VERSCHIEDENEN NETZWERKE ###########################

## Ego-Netzwerke der wichtigsten Webseiten, bemessen am jeweiligen Indegree-Wert:

## degree-Berechnung

# indegree, aufsteigend sortiert

c <- degree(ag, mode = "in")
sort(c)

#Ergebnis:
# achgut (127), faktum_magazin (48), politikxx (34), leserbriefe (23), bazonline (24), veralengsfeld (21)
# Ohne News-Sammel-Seiten:
# achgut (127), faktum_magazin (48), politikxx (34), bazonline (24), veralengsfeld (21), publicomag (19)

## Darstellung der Ego-Netzwerke der Webseiten

# Ego-Netzwerk achgut
vachgut <- subgraph <- make_ego_graph(ag, order=1, c("achgut"))
outd <- degree(ag, mode="out")
outd
vachgut
plot(vachgut[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'achgut.com'")

# Ego-Netzwerk faktum_magazin

vfaktum_magazin <- subgraph <- make_ego_graph(ag, order=1, c("faktum_magazin"))
outd <- degree (ag, mode="out")
plot(vfaktum_magazin[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'faktum-magazin.de'")

# Ego-Netzwerk politikxx

vpolitikxx <- subgraph <- make_ego_graph(ag, order=1, c("politikxx"))
ind <- degree (ag, mode="in")
plot(vpolitikxx[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'politik24.de'")

# Ego-Netzwerk leserbriefe

vleserbriefe <- subgraph <- make_ego_graph(ag, order=1, c("leserbriefe"))
plot(vleserbriefe[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'leserbriefe.info'")

# Ego-Netzwerk bazonline

vbazonline <- subgraph <- make_ego_graph(ag, order=1, c("bazonline"))
plot(vbazonline[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'bazonline.ch'")

# Ego-Netzwerk veralengsfeld

vveralengsfeld <- subgraph <- make_ego_graph(ag, order=1, c("veralengsfeld"))
plot(vveralengsfeld[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'vera-lengsfeld.de'")

# Ego-Netzwerk publicomag

vpublicomag <- subgraph <- make_ego_graph(ag, order=1, c("publicomag"))
plot(vpublicomag[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk 'publicomag.com'")

## Darstellung der 5 wichtigsten Ego-Netzwerke der Autoren (gemessen am Outdegree-Wert)

## Outdegree-Berechnung

# Outdegree, aufsteigend sortiert

c <- degree(ag, mode = "out")
sort(c)

# Ergebnis:
# peter grimm (129), henryk_m_broder (75), vera_lengsfeld (63), christian_ortner (50), dirk_maxeiner (34)

# Ego-Netzwerk Peter Grimm
vpeter_grimm <- subgraph <- make_ego_graph(ag, order=1, c("peter_grimm"))
plot(vpeter_grimm[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk Peter Grimm")

# Ego-Netzwerk Henryk M. Broder
vhenryk_m_broder <- subgraph <- make_ego_graph(ag, order=1, c("henryk_m_broder"))
plot(vhenryk_m_broder[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk Henryk M. Broder")

# Ego-Netzwerk Vera Lengsfeld
vvera_lengsfeld <- subgraph <- make_ego_graph(ag, order=1, c("vera_lengsfeld"))
plot(vvera_lengsfeld[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk Vera Lengsfeld")

# Ego-Netzwerk Christian Ortner
vchristian_ortner <- subgraph <- make_ego_graph(ag, order=1, c("christian_ortner"))
plot(vchristian_ortner[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk Christian Ortner")

# Ego-Netzwerk Dirk Maxeiner
vdirk_maxeiner <- subgraph <- make_ego_graph(ag, order=1, c("dirk_maxeiner"))
plot(vdirk_maxeiner[[1]], edge.arrow.size=.1, edge.label.degree=0, vertex.frame.color="white", vertex.label.family="Arial", vertex.label.dist=0.5, vertex.label.cex=.6, layout = layout_with_kk, main="Ego-Netzwerk Dirk Maxeiner")

## Netzwerke mit Qualitätsmedien

vertex_attr(ag)
 # Teilnetzwerk nur mit Autoren, die bei Qualitätsmedien publizierten (qualitätsmedium = 2)

qualitaet <- delete_vertices(ag, V(ag)[qualitaetsmedium=="1"])
plot(qualitaet, edge.arrow.size=.1, layout= layout_with_kk, main="Qualitätsmedien")
vertex_attr(qualitaet)
degree(qualitaet)
V(qualitaet)$degreequalitaet = degree(qualitaet) 
qualitaet2 <- delete_vertices(qualitaet, V(qualitaet)[degreequalitaet=="0"])
vertex_attr(qualitaet2)
ind <- degree(qualitaet2, mode="in")
plot(qualitaet2, edge.arrow.size=.01, vertex.frame.color="white", vertex.label.dist=1, vertex.label.cex=.7, vertex.label.family="Arial", layout = layout_with_fr, main="Qualitätsmedien")
# normalized = TRUE

# Zahlenmäßige Verteilung Links, Teaser und Volltext:

E(ag)[relation == 3] # Selektion des Attributs, nicht ausfuehren

# Teilnetzwerk nur mit Links

ag_links <- subgraph.edges(ag, E(ag)[relation == 1])
ag_links # 77 Knoten, 122 Kanten
plot (ag_links)
clinks <- degree(ag_links, mode = "in")
sort(clinks)
# meiste Verlinkungen: newstral (19), kopp_report(10), freepress_media(8)

# Teilnetzwerk nur mit Volltexten

ag_volltext <- subgraph.edges(ag, E(ag)[relation == 3]) 
ag_volltext # 92 Knoten, 341 Kanten
plot (ag_volltext)
cvoll <- degree(ag_volltext, mode = "in")
sort(cvoll)
# meiste Volltexte: achgut (126), veralengsfeld (21), publicomag (19), welt (17)

# Teilnetzwerk nur mit Teasern

ag_teaser <- subgraph.edges(ag, E(ag)[relation == 2]) 
ag_teaser # 77 Knotwn, 234 Kanten
plot (ag_teaser)
cteaser <- degree(ag_teaser, mode="in")
sort(cteaser)
# meiste Verlinkungen: faktum_magazin (44), politikxx (31), leserbriefe (22), news_feed_reader (20), haolam_info (14)

#### Betweenness-Netzwerke

# betweenness(ag) --> immer NULL!

### Dichte
edge_density(ag)
# ist 0,02237417

### Durchmesser
diameter(ag)
# ist 1




